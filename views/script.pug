extends ui_layout
  
block content

  
  -var cdn = "https://dhpd030vnpk29.cloudfront.net";
  -var s3 = "https://testdrive-filesystem.s3.us-east-2.amazonaws.com/"
  -//var cdn = "";
  .computer.only.tablet.only.four.wide.column
    .ui.fixed.sticky.sideMenu(style='width: 272px !important; height: 500px !important;')
      if(mod == "habits")   
        .ui.vertical.menu(style="width:auto;")
          a.active.item(data-value='feed')#feedsteps 
            i.icon.home
            |  Home
          a.item(data-value='notifications')#notificationsteps
            i.icon.bell
            |  Notifications
            .ui.red.right.pointing.label(style="display:none") !
      
      .ui.card
        .image
          if user.profile.picture
            img(src=cdn+'/profile_pictures/'+user.profile.picture)
          else
            img(src=user.gravatar(60))
        .content
          a.header(href='/me/'+mod)= user.profile.name || user.email || user.id
          .meta="@Guest"
          .description=user.profile.bio
          .description
            if user.profile.location
              i.marker.icon
              span=user.profile.location
        .one.ui.bottom.attached.icon.buttons
            button.ui.editprofile.button(data-tooltip='Update Your Profile', data-position='bottom left')
                i.write.icon
      
            
  if(mod == "habits")
    //-mobile only version of the menu
    .mobile.only.sixteen.wide.column
      .ui.top.fixed.vertical.menu(style="width:100%; padding-top:5em;")
        a.active.item(data-value='feed')#feedsteps
          i.icon.home
          |  Home
        a.item(data-value='notifications')#notificationsteps      
          i.icon.bell
          |  Notifications
          .ui.red.right.pointing.label(style="display:none") !
      br
      br

  #loading.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column
    img.ui.centered.small.image(src='/heart.svg')
  #content.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column(style='display: none;')  

    //- Input for creating new post at top of feed
    #newpost.ui.fluid.left.labeled.right.icon.input.habitsHomeDisplay
      .ui.label
        if user.profile.picture
          img.ui.avatar.image(src=cdn+'/profile_pictures/'+user.profile.picture)
        else
          img.ui.avatar.image(src=user.gravatar(60))
      input(type='text', placeholder='Create a post')
      i.big.photo.link.icon
        
    //- Habits module specific ui
    if(mod == "habits")
        
      //-Buttons at the top of the notifications page
      button.ui.basic.button.habitsNotificationsDisplay(style="display:none;")#habitsSettingsButton
        i.cog.icon
        |   Settings                    
      button.ui.basic.button.habitsNotificationsDisplay(style="display:none;")#habitsActivityButton
        i.clock.icon
        |   My Activity
        
      //-Settings page
      .ui.container.habitsSettingsDisplay(style="display:none;")
        h2.ui.header Notification Settings
        .ui.divider
        br
        form.ui.form
          .field
            br
            .ui.toggle.checkbox
              input(type='checkbox' name='popupAlerts' checked='checked')
              label Popup Alerts
          span.settingLabel Disabling this will stop popup alerts. 
          br
          br    
          
      //-activtiy page
      .ui.container.habitsActivityDisplay(style="display:none;")
        h2.ui.header My Activity
        .ui.divider

        h2.ui.header Total View Time:
        .ui.statistic
          .value#habitsActivityTotalTime 0
          .label
            | minutes
    
  
    each val in script
      //- create a card for each post in val (if by user make the card a little different)
      //- for the habits module specifically, notifications are treated a little different (different UI)
      //- if val.relativeTime - then post came from user_post (so user post, user reply to actor reply to user post)
      
      //-notifications display, habits
      if (val.type == 'notification')
        .ui.raised.segment.habitsNotificationItem(style="display:none;" correspondingPost=val.info_text)
          .ui.feed
           .event
             //-CSS properties: https://stackoverflow.com/questions/26421274/css-circular-cropping-of-rectangle-image
             .label(style="overflow:hidden !important; width:3em !important; height:3em !important")
               img(src=cdn + '/profile_pictures/' +val.actor.profile.picture style="width:100% !important; height:100% !important; display:inline  !important; margin:0 auto !important;")
             .content
               .summary=val.body
                .time.notificationTime(style="font-weight:normal !important;")=(habitsStart + val.time)
                .time.millisecondType(style="display:none;")=(val.time)
                    
      else if val.relativeTime
        -var u_class;
        -if (val.actorAuthor) {u_class = "actorReply"}
        -else if (val.reply) {u_class = "userReply"}
        -else {u_class = "userPost"}
        .ui.fluid.card.habitsHomeDisplay(u_postID=val.id, ui=user.ui, notify=user.notify, type=u_class, postID=val.postID)
          
          //- This is a User made post
          .content
            .right.floated.time.meta= ((Date.now() - (Date.now() - val.absTime)))
            |  
            a.ui.avatar.image(href='/me/'+mod)
              if user.profile.picture
                img(src=cdn+'/profile_pictures/'+user.profile.picture)
              else
                img(src=user.gravatar(60))
            a(href='/me/'+mod)
              span=user.profile.name || user.email || user.id
          if val.picture
            .image
              img(src=cdn+"/post_pictures/"+val.picture)
          .content
            .description=val.body
          .two.ui.bottom.attached.icon.buttons(style="z-index:0;")
            .ui.reply.button(tabindex='0')
              i.reply.icon
              |  Reply
            if val.liked
              .ui.red.like.button
                i.heart.icon
                |  Like
            else
              .ui.like.button
                i.heart.icon
                |  Like
          if val.comments.length > 0
            .content
              .ui.comments
                each comment in val.comments
                  //-IF this comment is USER made, do this
                  if (Date.now() + comment.time) < Date.now()
                    if !comment.flagged
                      if comment.new_comment
                        -console.log("New COMMENT AREA");
                        .comment(commentID=comment.commentID)
                          a.avatar.image(href='/me/'+mod)
                            if user.profile.picture
                              img(src=cdn+'/profile_pictures/'+user.profile.picture)
                            else
                              img(src=user.gravatar(60))
                          .content
                            a.author(href='/me/'+mod)=user.profile.name || user.username || user.id
                            .metadata
                              span.date.sim=(Date.now() + comment.time)
                              .rating
                                if comment.liked
                                  i.red.heart.icon
                                  span=comment.likes
                                  | Likes 
                                else
                                  i.heart.icon
                                  span.num=comment.likes
                                  |  Likes
                            .text=comment.body
                            .actions
                              if comment.liked
                                a.red.like.comment Like
                              else
                                a.like.comment Like
                              a.flag.comment Flag
                      //- Else this is a normal comment from the script
                      else
                        .comment(commentID=comment.commentID)
                          a.avatar(href='/user/'+comment.actor.username)
                            img(src='/picture.svg', data-src=cdn+'/profile_pictures/'+comment.actor.profile.picture)
                          .content
                            a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                            .metadata
                              span.date.sim=(Date.now() + comment.time)
                              .rating
                                if comment.liked
                                  i.red.heart.icon
                                  span=comment.likes
                                  | Likes 
                                else
                                  i.heart.icon
                                  span.num=comment.likes
                                  |  Likes
                            .text=comment.body
                            .actions
                              if comment.liked
                                a.red.like.comment Like
                              else
                                a.like.comment Like
                              a.flag.comment Flag
          .extra.content
            if user.comment_prompt == "yes"
              .description(style="text-align:center;background:#E8E8E8")="How is "+(user.profile.name || user.username || user.id)+" Feeling?"
              .ui.fluid.left.labeled.right.icon.input
                .ui.label            
                  if user.profile.picture
                    img.ui.avatar.image(src=cdn+'/profile_pictures/'+user.profile.picture, name=user.profile.name || user.username || user.id)
                  else
                    img.ui.avatar.image(src=user.gravatar(60), name=user.profile.name || user.username || user.id)
                input.newcomment(type='text', placeholder='Write a Comment')
                i.big.send.link.icon
            else
              .ui.fluid.left.labeled.right.icon.input
                .ui.label
                  if user.profile.picture
                    img.ui.avatar.image(src=cdn+'/profile_pictures/'+user.profile.picture, name=user.profile.name || user.username || user.id)
                  else
                    img.ui.avatar.image(src=user.gravatar(60), name=user.profile.name || user.username || user.id)            
                input.newcomment(type='text', placeholder='Write a Comment')
                i.big.send.link.icon

      //- Now we are making posts by Actors, not the USER
      
      //- This is a tageted ad post in the targeted ads module
      else
        if(val.type == user.targetedAdTopic)
          //-#step3.ui.fluid.card.test
          #blueDotStep.ui.fluid.card.dim.habitsHomeDisplay(postID=val.id)
            .ui.dimmer.flag
              .content
                .center
                  h2.ui.inverted.icon.header
                    i.red.flag.icon
                    |                                     You &apos;ve reported this ad!
                    h3.ui.inverted.header
                      span The admins will review this ad further. We are sorry you had this experience.
                  
            .ui.inverted.dimmer.notflag
              .content
                .center
                  h2.ui.inverted.icon.header
                    i.eye.slash.icon(style="color:black;")
                    h1.ui.header(style="color:black;") You&apos;ve hidden this ad!
            .content
              .ui.right.floated.menu(style="border:none; box-shadow:none;")
                .ui.dropdown.icon.item
                  i.ellipsis.horizontal.icon
                  .menu.fluid.floated.left#item1
                    .item(data-value='0')
                      i.fitted.circular.close.icon(style="color:gray;")
                      | Hide Ad
                    .item(data-value='1')
                      i.fitted.circular.exclamation.icon(style="color:gray;")
                      | Report Ad
                    .item(data-value='2')
                      i.fitted.circular.question.icon(style="color:gray;") 
                      | Why Am I Seeing This Ad?
                        
              a.left.floated(href='/user/'+val.actor.username)
                img.ui.avatar.image(src='/picture.svg', data-src=cdn+'/profile_pictures/'+val.actor.profile.picture)
                span#companyName=val.actor.profile.name
  
            .image
              //-note: not lazy-loaded 
              img(src=cdn+"/post_pictures/"+val.picture, style="max-width:100%;")
  
            #step4.content
              .description!=val.body

            .content#sponsoredTag(style="border:none;")
              i.left.floated.external.alternate.icon(style="color:gray;")
              .left.floated.meta="Sponsored"
            .three.ui.bottom.attached.icon.buttons
              .ui.reply.button(tabindex='0')
                i.reply.icon
                |  Reply
              .ui.labeled.button(tabindex='0')
                .ui.like.button
                  i.heart.icon
                  |  Like
                a.ui.basic.red.left.pointing.label.count=50
                
            if val.comments.length > 0
              .content
                .ui.comments
                  each comment in val.comments
                    //-IF this comment is USER made, do this
                    if comment.new_comment
                      -console.log("New COMMENT AREA");
                      .comment(commentID=comment.new_comment_id)
                        a.avatar.image(href='/me/'+mod)
                          if user.profile.picture
                            img(src=cdn+'/profile_pictures/'+user.profile.picture)
                          else
                            img(src=user.gravatar(60))
                        .content
                          a.author(href='/me/'+mod)=user.profile.name || user.username || user.id
                          .metadata
                            span.date.sim=(Date.now() + comment.time)
                            .rating
                              i.heart.icon
                              span.num=0
                              |  Likes
                          .text=comment.body
                          .actions
                            a.like.comment Like
                            a.flag.comment Flag
                    //- Else this is a normal comment from the script
                    else
                      .comment(commentID=comment.id)
                        a.avatar.image(href='/user/'+comment.actor.username)
                          img(src='/picture.svg', data-src=cdn+'/profile_pictures/'+comment.actor.profile.picture)
                        .content
                          a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                          .metadata
                            span.date.sim=(Date.now() + comment.time)
                            .rating
                              if comment.liked
                                i.red.heart.icon
                                span=comment.likes
                                |  Likes 
                              else
                                i.heart.icon
                                span.num=comment.likes
                                |  Likes
                          .text=comment.body
                          .actions
                            if comment.liked
                              a.red.like.comment Like
                            else
                              a.like.comment Like
                            a.flag.comment Flag      
        
          
            .extra.content
              .ui.fluid.left.labeled.right.icon.input
                .ui.label
                  img.ui.avatar.image(src=cdn+'/profile_pictures/'+user.profile.picture, name=user.profile.name)
                input.newcomment(type='text' placeholder='Write a Comment')
                i.big.send.link.icon#sendAdComment
                      
        else if (((val.type == 'Sports') || (val.type == 'Food') || (val.type == 'Gaming')) && (!(val.type == user.targetedAdTopic)))
          //- do nothing, do not display. This is another targteted ad, but one of the unselected types 
        
        else
        
          //-this is a totally normal actor post
          .ui.fluid.card.dim.habitsHomeDisplay(postNumber = val.post_id, postID=val.id, ui=user.ui, transparency=user.transparency, notify=user.notify, state=val.state || 'unread', type='actor', actor_un = val.actor.username, actor_name = val.actor.profile.name, actor_pic = val.actor.profile.picture)
            //- dimmer DIV for flagging
            .ui.dimmer.flag
                  .content
                    .center
                      h2.ui.inverted.icon.header
                        i.red.flag.icon
                        |  You&apos;ve flagged this!
                        h3.ui.inverted.header
                          span="The admins will review this post further. We are sorry you had this experience."
            //- Normal Base Post
            .content
              .right.floated.time.meta= (Date.now() + val.time)
              |  
              a(href='/user/'+val.actor.username)
                img.ui.avatar.image(src='/picture.svg', data-src=cdn+'/profile_pictures/'+val.actor.profile.picture)
                span=val.actor.profile.name
            //-div(style="position: relative; z-index: 1;")
              img(src="image.png" style="position: absolute; z-index: 2;")
              span#overlay_text(style="position: relative; top: -10px; z-index: 3;") OVERLAY
            .img.post
              //-img.post(src="/"+val.picture)
              if (val.module == 'digital-literacy' && val.info_text != "")           
                img(src='/picture.svg', data-src=cdn+"/post_pictures/"+val.picture, onclick='openPost()',style="max-width:100%;cursor:pointer")
              else if (val.module == 'digfoot')
                img(src='/picture.svg', data-src=cdn+"/post_pictures/"+val.picture, onclick='openPostDigfoot()',style="max-width:100%;cursor:pointer")
              else
                img(src='/picture.svg', data-src=cdn+"/post_pictures/"+val.picture, style="max-width:100%;")
            if (val.module == 'digital-literacy' && val.info_text != "")
              .read.rounded.right.floated.modual.info_button(id="info_"+val.id, data-info_text = val.info_text, style="z-index:9;text-align:center;align-self:flex-end;position:relative;bottom:10px;width:7%;height:auto")
                i.info.icon
            .content
              .description!=val.body
            .three.ui.bottom.attached.icon.buttons(style="z-index:0;")
              .ui.reply.button(tabindex='0')
                i.reply.icon
                |  Reply
              .ui.flag.button(tabindex='0')
                i.flag.icon
                |  Flag
              if val.like
                .ui.labeled.button(tabindex='0')
                  .ui.red.like.button
                    i.heart.icon
                    |  Like
                  a.ui.basic.red.left.pointing.label=val.likes
              else
                .ui.labeled.button(tabindex='0')
                  .ui.like.button
                    i.heart.icon
                    |  Like
                  a.ui.basic.red.left.pointing.label.count=val.likes
            if val.comments.length > 0
              .content
                .ui.comments
                  each comment in val.comments
                    //-IF this comment is USER made, do this
                    if comment.new_comment
                      -console.log("New COMMENT AREA");
                      .comment(commentID=comment.new_comment_id)
                        a.avatar.image(href='/me/'+mod)
                          if user.profile.picture
                            img(src=cdn+'/profile_pictures/'+user.profile.picture)
                          else
                            img(src=user.gravatar(60))
                        .content
                          a.author(href='/me/'+mod)=user.profile.name || user.username || user.id
                          .metadata
                            span.date.sim=(Date.now() + comment.time)
                            .rating
                              i.heart.icon
                              span.num=0
                              |  Likes
                          .text=comment.body
                          .actions
                            a.like.comment Like
                            a.flag.comment Flag
                    //- Else this is a normal comment from the script
                    else
                      .comment(commentID=comment.id)
                        a.avatar.image(href='/user/'+comment.actor.username)
                          img(src='/picture.svg', data-src=cdn+'/profile_pictures/'+comment.actor.profile.picture)
                        .content
                          a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                          .metadata
                            span.date.sim=(Date.now() + comment.time)
                            .rating
                              if comment.liked
                                i.red.heart.icon
                                span=comment.likes
                                |  Likes 
                              else
                                i.heart.icon
                                span.num=comment.likes
                                |  Likes
                          .text=comment.body
                          .actions
                            if comment.liked
                              a.red.like.comment Like
                            else
                              a.like.comment Like
                            a.flag.comment Flag
            .extra.content
              if user.comment_prompt == "yes"
                .description(style="text-align:center;background:#E8E8E8")="How is "+val.actor.profile.name+" Feeling?"
                .ui.fluid.left.labeled.right.icon.input
                  .ui.label            
                    if user.profile.picture
                      img.ui.avatar.image(src=cdn+'/profile_pictures/'+user.profile.picture, name=user.profile.name || user.username || user.id)
                    else
                      img.ui.avatar.image(src=user.gravatar(60), name=user.profile.name || user.username || user.id)
                  input.newcomment(type='text', placeholder='Write a Comment')
                  i.big.send.link.icon
              else
                .ui.fluid.left.labeled.right.icon.input
                  .ui.label
                    if user.profile.picture
                      img.ui.avatar.image(src=cdn+'/profile_pictures/'+user.profile.picture, name=user.profile.name || user.username || user.id)
                    else
                      img.ui.avatar.image(src=user.gravatar(60), name=user.profile.name || user.username || user.id)            
                  input.newcomment(type='text', placeholder='Write a Comment')
                  i.big.send.link.icon       
        
    -var post_quiz = "/results/"+mod;
    a.ui.fluid.card.habitsHomeDisplay(href=post_quiz)
      .content
        .ui.big.green.labeled.icon.button.script
          i.rocket.icon
          |   Let's Continue!
        //-.description
        //-|  Click here when you are done!
          
    br
    br
    //- Chat Box  
    #chatbox1.container.clearfix.hidden
      .chat(style="right:24px;")
        .chat-header.clearfix
          a.chat-close(href='#')
            i.large.close.icon
          a.chat-minimize(href='#')
            i.window.minimize.icon
          a(href='#')
            img.ui.avatar.image(src=cdn+'/profile_pictures/avatar-icon.svg',style="width: 3em;height: 3em;")
          .chat-about
            .chat-with Chat with Jack
            //- .chat-num-messages already 1 902 messages
          //- i.fa.fa-star
        //- end chat-header
        .chat-history
          ul
            li
              .message-data
                span.message-data-name
                  i.dot.circle.icon.online
                  |  Jack
                span.message-data-time 10:12 AM
              .message.my-message
                | hey, I have a question about the homework for tomorrow
            li
              .message-data
                span.message-data-name
                  i.dot.circle.icon.online
                  |  Jack
                span.message-data-time 10:20 AM
              .message.my-message
                | can you tell me your number so i can call you real quick?

        //- end chat-history
        .chat-message.clearfix
          .ui.fluid.action.input
            input#message-to-send(type='text', name='message-to-send', placeholder='Type your message')
            button
              i.send.icon
              | Send
        //- end chat-message
        //- end chat
    //- end container

    //- Chat Box  
    #chatbox2.container.clearfix.hidden
      .chat(style="right:345px;")
        .chat-header.clearfix
          a.chat-close(href='#')
            i.large.close.icon
          a.chat-minimize(href='#')
            i.window.minimize.icon
          a(href='#')
            img.ui.avatar.image(src=cdn+'/profile_pictures/user8.jpg',style="width: 3em;height: 3em;")
          .chat-about
            .chat-with Chat with Rob
            //- .chat-num-messages already 1 902 messages
          //- i.fa.fa-star
        //- end chat-header
        .chat-history
          ul
            li
              .message-data
                span.message-data-name
                  i.dot.circle.icon.online
                  |  Rob
                span.message-data-time 10:12 AM
              .message.my-message
                | Hi there! I noticed that you were also online!
            li
              .message-data
                span.message-data-name
                  i.dot.circle.icon.online
                  |  Rob
                span.message-data-time 10:20 AM
              .message.my-message
                | Do you want to talk for a bit?
            li
              .message-data
                span.message-data-name
                  i.dot.circle.icon.online
                  |  Rob
                span.message-data-time 10:20 AM
              .message.my-message
                | I want to get to know you better!

        //- end chat-history
        .chat-message.clearfix
          .ui.fluid.action.input
            input#message-to-send(type='text', name='message-to-send', placeholder='Type your message')
            button
              i.send.icon
              | Send
        //- end chat-message
        //- end chat
    //- end container


    script()#message-template(type='text/x-handlebars-template').
      <li class="clearfix">
      <div class="message-data align-right">
      <span class="message-data-time" >{{time}}</span> &nbsp; &nbsp;
      <span class="message-data-name" >Me</span> <i class="fa fa-circle me"></i>
      </div>
      <div class="message other-message float-right">
      {{messageOutput}}
      </div>
      </li>
    script()#message-response-template(type='text/x-handlebars-template').
      <li>
      <div class="message-data">
      <span class="message-data-name"><i class="fa fa-circle online"></i> Vincent</span>
      <span class="message-data-time">{{time}}</span>
      </div>
      <div class="message my-message">
      {{response}}
      </div>
      </li>
      
    //- New Post Modal  
    .ui.small.post.modal  
      i.close.icon  
      .header Add a New Post  
      .content  
        form#postform.ui.feed.form(action='/post/new', method='POST')  
          input(type='hidden', name='_csrf', value=_csrf) 
          input(type='hidden', name='module', value=mod)  
          .field  
            textarea(rows='3',placeholder='What do you want to share?',name='body')
          .ui.segment
              .three.fields
                .field
                  .ui.radio.checkbox
                    input#photoOne.hidden(type='radio' name='picinput' value="basketballshoes.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/basketballshoes.jpg" style='width:65%;height:auto;')
                .field
                  .ui.radio.checkbox
                    input#photoTwo.hidden(type='radio' name='picinput' value="typewriter.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/typewriter.jpg" style='width:65%;height:auto;')
                .field
                  .ui.radio.checkbox
                    input#photoThree.hidden(type='radio' name='picinput' value="cat.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/cat.jpg" style='width:65%;height:auto;') 
              .three.fields
                .field
                  .ui.radio.checkbox
                    input#photoOne.hidden(type='radio' name='picinput' value="cupcakes.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/cupcakes.jpg" style='width:65%;height:auto;')
                .field
                  .ui.radio.checkbox
                    input#photoTwo.hidden(type='radio' name='picinput' value="autumn.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/autumn.jpg" style='width:65%;height:auto;')
                .field
                  .ui.radio.checkbox
                    input#photoThree.hidden(type='radio' name='picinput' value="Disneyland.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/Disneyland.jpg" style='width:65%;height:auto;')  
              .three.fields
                .field
                  .ui.radio.checkbox
                    input#photoTwo.hidden(type='radio' name='picinput' value="studytime.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/studytime.jpg" style='width:65%;height:auto;')
                .field
                  .ui.radio.checkbox
                    input#photoThree.hidden(type='radio' name='picinput' value="palm_trees.jpeg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/palm_trees.jpeg" style='width:65%;height:auto;') 
                .field
                  .ui.radio.checkbox
                    input#photoOne.hidden(type='radio' name='picinput' value="footballseason.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/footballseason.jpg" style='width:65%;height:auto;')
              .three.fields
                .field
                  .ui.radio.checkbox
                    input#photoFour.hidden(type='radio' name='picinput' value="Iceland.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/Iceland.jpg" style='width:65%;height:auto;')
                .field
                  .ui.radio.checkbox
                    input#photoFive.hidden(type='radio' name='picinput' value="balloons.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/balloons.jpg" style='width:65%;height:auto;')
                .field
                  .ui.radio.checkbox
                    input#photoSix.hidden(type='radio' name='picinput' value="beachpuppy.jpg")
                    label
                        img.lazy(src='/picture.svg' data-src=cdn+"/post_pictures/beachpuppy.jpg" style='width:65%;height:auto;')  
              
          .ui.error.message 
      .actions  
        input.ui.green.button(type='submit', name="foo", value='Post', form='postform')

    //- Info Lit Flag Modal  
    .ui.small.info.flag.modal  
      i.close.icon  
      .header You've flagged this article! Do you think there are any signs of fake news? [check multiple]  
      .content
        form.ui.form()  
          .inline.field
            .ui.checkbox
              input.hidden(type='checkbox', tabindex='0')
              label The article had a shocking and exaggerated headline.
          .inline.field
            .ui.checkbox
              input.hidden(type='checkbox', tabindex='0')
              label The article used sensational images.
            label
          .inline.field
            .ui.checkbox
              input.hidden(type='checkbox', tabindex='0')
              label The article had an unusual web address or site name.
          .inline.field
            .ui.checkbox
              input.hidden(type='checkbox', tabindex='0')
              label The article had spelling errors, ALL CAPS, or dramatic punctuation!!!!
          .inline.field
            .ui.checkbox
              input.hidden(type='checkbox', tabindex='0')
              label I didn't see any signs. This could be a real news article. I’m flagging it for another reason
      .actions
        .ui.positive.right.labeled.icon.button
          | Submit
          i.checkmark.icon

    //- View Next Steps Modal      
    .ui.small.modal#next_steps_modual  
      i.close.icon  
      .header You've clicked on this article! Let's explore some things you could do next. 
      .content
          .ui.styled.fluid.accordion
            .title
              //- .ui.fitted.large.checkbox
              //-   input.ui(type="checkbox", checked="")#check
              i.dropdown.icon
              |     Read the full article
            .content
              p.transition.hidden
                | Look out for unbelievable claims or wild images. Check for spelling or grammar mistakes, too!
            .title
              i.dropdown.icon
              |     Check out the website this article is from
            .content
              p
                | If the website is not part of a credible news, academic, or governmental organization, this is a sign the article might not be trustworthy.
            .title
              i.dropdown.icon
              | Fact-check the article by searching the topic on Snopes.com, FactCheck.org, or major news websites.
            .content
              p
                | Corroboration from other sources that confirms or supports a news article is a sign that the information is credible.
            .title
              i.dropdown.icon
              |     Be aware of what you share.
            .content
              p
                | It's easy to quickly like or share something, but you could be spreading fake news! Remember to only like or share articles you know are true.
      .actions
        .ui.positive.right.labeled.icon.button
          | Done
          i.checkmark.icon



    //- View Post Info Modal
    .ui.small.popinfo.modal
      i.close.icon  
      h3.ui.header
        i.info.circle.icon 
        | Info about News Source  
      .content
          .field
            h3.ui.header#post_info_text_modual    
              |
      .actions
        .ui.positive.right.labeled.icon.button
          | Done
          i.checkmark.icon
            
    //- digfoot post checklist Modal      
    .ui.small.modal#digfoot_post_modual
      i.close.icon  
      .header How would this post influence digital footprints?
      .content
          .ui.form
             .field
               .ui.checkbox
                 input(type='checkbox')
                 label The post will have a negative impact on this person’s digital footprint.
             .field
               .ui.checkbox
                 input(type='checkbox')
                 label This person was sharing something that they might later regret.
             .field
               .ui.checkbox
                 input(type='checkbox')
                 label The post was not considerate of other people’s digital footprints.
             .field
               .ui.checkbox
                 input(type='checkbox')
                 label The post will not have an impact on this person’s digital footprint. 
             .field
               .ui.checkbox
                 input(type='checkbox')
                 label This was a responsible post that will create a positive digital footprint.

      .actions
        .ui.positive.right.labeled.icon.button
          | Done
          i.checkmark.icon
            
    //- Why am I seeing this ad modal, used in targeted ads modual. text depends on previously selected interest in trans2.
    .ui.small.modal#whyAmISeeingThisAdModal
      i.close.icon
      .header Why am I seeing this ad?
      if (user.targetedAdTopic == 'Sports')
        .content(id="sports")
      else if (user.targetedAdTopic == 'Food')
        .content(id="food")
      else if (user.targetedAdTopic == 'Gaming')
        .content(id="gaming")
                
    //-Hide ad modal, used in targeted ads module. 
    .ui.small.modal#hideAdModal
      i.close.icon  
      .header Why did you choose to hide this ad?
      .content
          .ui.form
             .field
               .ui.checkbox
                 input(type='checkbox')
                 label The ad was not relevant to me
             .field
               .ui.checkbox
                 input(type='checkbox')
                 label I see this ad too often
             .field
               .ui.checkbox
                 input(type='checkbox')
                 label The ad was inappropriate
             br
             .actions
               .ui.positive.right.labeled.icon.button
                 | Done
                 i.checkmark.icon
                   
    //-Hide ad modal, used in targeted ads module. 
    .ui.tiny.long.viewPolicyPopup.modal  
      .ui.segment 
        .ui.fluid.card
         .content
           .right.floated.meta= "Yesterday"
           |
           a(href='/user/m-beckett')
             img.ui.avatar.image(src=cdn+'/profile_pictures/user17.jpg')
             span='Mary Beckett'
         .image
           img.post(src=cdn+'/post_pictures/snowhabits.jpg')
         #step4.content
           .description="Look at this cute snowman😄"
           //-.right.floated.meta
             i.icon.checkmark
             | Seen by 12
         .three.ui.bottom.attached.icon.buttons
           .ui.reply.button(tabindex='0')
             i.reply.icon
             |  Reply
           .ui.flag.button(tabindex='0')
             i.flag.icon
             |  Flag
           .ui.labeled.button(tabindex='0')
             .ui.like.button
               i.heart.icon
               |  Like
             a.ui.basic.red.left.pointing.label.count=2       
         .content
           .ui.comments
             .comment
               a.avatar
                 img(src=cdn+'/profile_pictures/user3.jpg')
               .content
                 a.author Cloe Hansen
                 .metadata
                   span.date Yesterday
                   i.heart.icon
                   |  2 Likes
                 .text()
                   | sweet!!
                 .actions
                   a.like Like
                   a.flag Flag
             .comment
               a.avatar
                 img(src=cdn+'/profile_pictures/user5.jpeg')
               .content
                 a.author Kiki Pualani
                 .metadata
                   span.date Yesterday
                   i.heart.icon
                   |  2 Likes
                 .text()
                   | I like it haha
                 .actions
                   a.like Like
                   a.flag Flag
        .actions
         .ui.positive.left.labeled.icon.button
           | Back to Feed
           i.chevron.left.icon
    .ui.fixed.bottom.sticky.notificationPopup#mobilePopup(style="padding-bottom:2em; padding-left:1em; padding-right:1em; display:none;" correspondingpost=0)
      .ui.info.message#removeHiddenMobile
        i.close.icon
        .ui.feed
         .event
           //-CSS properties: https://stackoverflow.com/questions/26421274/css-circular-cropping-of-rectangle-image
           .label(style="overflow:hidden !important; width:3em !important; height:3em !important")
             img.popupNotificationImage(src=cdn + '/profile_pictures/user39.jpg' style="width:100% !important; height:100% !important; display:inline  !important; margin:0 auto !important;")
           .content
             .summary Thomas Rogers commented on Hannah Lee’s post: “I love ribs”.        
  .computer.only.tablet.only.two.wide.column 
    .ui.fixed.bottom.sticky.notificationPopup#desktopPopup(style="padding-bottom:2em; padding-left:1em; padding-right:1em; display:none;" correspondingpost=0)
     .ui.info.message#removeHidden
       i.close.icon
       .ui.feed
        .event
          //-CSS properties: https://stackoverflow.com/questions/26421274/css-circular-cropping-of-rectangle-image
          .label(style="overflow:hidden !important; width:3em !important; height:3em !important")
            img.popupNotificationImage(src=cdn + '/profile_pictures/user39.jpg' style="width:100% !important; height:100% !important; display:inline  !important; margin:0 auto !important;")
          .content
            .summary Thomas Rogers commented on Hannah Lee’s post: “I love ribs”.               
 
block scripts
  script().
            
    //Convenient variable to indicate which module we're in
    let pathArray = window.location.pathname.split('/');
    var currentModule = pathArray[2];
    
    //Activating the sticky functionality for the left column
    //$('.ui.sticky.sideMenu').sticky();
      
    /**
     * Code for ad dropdown functionality in targeted ads module
     */
    $('.ui.dropdown.icon.item')
     .dropdown({
       onChange: function() {
         var dropdownSelection = $(this).data().value
         if(dropdownSelection == 0){
           $(".inverted.dimmer").css("background-color","rgba(211,211,211,0.95)");
           //hide the post
           var post = $(this).closest(".ui.fluid.card.dim");
           var postID = post.attr("postID");
           $.post("/feed", { postID: postID, flag: 1, _csrf: $('meta[name="csrf-token"]').attr('content') });
           post.find(".ui.inverted.dimmer.notflag").dimmer({
             closable: false
           }).dimmer('show')
           //repeat to ensure its closable
           post.find(".ui.inverted.dimmer.notflag").dimmer({
             closable: true
           })
             .dimmer('show');
           //open hida ad Modal
           $("#hideAdModal").modal('show');
   
         } else if (dropdownSelection == 1){
           //flag the post
           var post = $(this).closest(".ui.fluid.card.dim");
           var postID = post.attr("postID");
           $.post("/feed", { postID: postID, flag: 1, _csrf: $('meta[name="csrf-token"]').attr('content') });  
           post.find(".ui.dimmer.flag").dimmer({
             closable: false
           })
             .dimmer('show');
           //repeat to ensure its closable
           post.find(".ui.dimmer.flag").dimmer({
             closable: true
           })
             .dimmer('show');
           
         } else if (dropdownSelection == 2){
           //get the company name to dynamically use in the modal
           var companyName = $(this).closest(".ui.fluid.card.dim").find("#companyName").text();
           //get the ad type
           var adType = $("#whyAmISeeingThisAdModal").find(".content").attr("id");
           //open info modal, generate correct text based on ad type and company name
           $("#whyAmISeeingThisAdModal .content").html(
             "<p>You are seeing this ad because <b>"+companyName+"</b> wanted to reach people interested in <b>"+adType+"</b>.</p>" +
             "<p>This is based on what you have done on TestDrive, such as pages you have visited and search terms you have clicked on.</p>"+
             "<br>" +
             "<div class='actions'>" +
             "<div class='ui positive right labeled icon button'>Done" +
             "<i class='checkmark icon'></i></div></div>"
           );
           $("#whyAmISeeingThisAdModal").modal('show'); 
         }
       }
     });
     
     /**
      * End code for targeted ads dropdown functionality
      */      
    
      /*
      * Misc code
      */
        $('.big.plus.icon').css({"display": "block"})
        $('.ui.simple.dropdown.item').css({"display":"inherit"})
        $('.ui.accordion').accordion();  
         
        
        
      /**
       * Code to open modals
       */    
       
        function openPost(){
          $('#next_steps_modual').modal('show');
        }
        
        function openPostDigfoot(){
          console.log("test if ex");
          $('input[type=checkbox]').prop('checked',false);
          $('#digfoot_post_modual').modal('show');
        }
        
      /**
       * End code to open modals
       */
            
      /**
       * chat box code
       */
       
        $(window).on("load", function() {openChat()}); 
       
        function openChat(){
          let pathArray = window.location.pathname.split('/');
          if(pathArray[2] == "safe-posting"){
          setTimeout(function(){
              $($('#chatbox1 .chat-history')[0]).slideToggle(300, 'swing');
              $($('#chatbox1 .chat-message')[0]).slideToggle(300, 'swing');
              $('#chatbox1').slideToggle(300, 'swing'); 
              $($('#chatbox1 .chat-history')[0]).slideToggle(300, 'swing');
              $($('#chatbox1 .chat-message')[0]).slideToggle(300, 'swing');
              
            }, 10000);    
                  
          setTimeout(function(){

              $($('#chatbox2 .chat-history')[0]).slideToggle(300, 'swing');
              $($('#chatbox2 .chat-message')[0]).slideToggle(300, 'swing');
              $('#chatbox2').slideToggle(300, 'swing'); 
              $($('#chatbox2 .chat-history')[0]).slideToggle(300, 'swing');
              $($('#chatbox2 .chat-message')[0]).slideToggle(300, 'swing');
              
            }, 20000);    
          }
        }
        
      /**
       * End chat box code
       */

    //##########################
    //long block of code dedicated to only the habits module ahead, should have separated into another script file or generally found a cleaner way to do this module 
         
       /**
        * Implementing timer for habits module, and activity page, only want this to occur in habits module
        */
        
        console.log("current Module: "+currentModule);
        if(currentModule === "habits"){
          //Timing how long the user looks at this page
          //from https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API
          
          // Set the name of the hidden property and the change event for visibility
          var hidden, visibilityChange; 
          
          if (typeof document.hidden !== "undefined") { // Opera 12.10 and Firefox 18 and later support 
            hidden = "hidden";
            visibilityChange = "visibilitychange";
          } else if (typeof document.msHidden !== "undefined") {
            hidden = "msHidden";
            visibilityChange = "msvisibilitychange";
          } else if (typeof document.webkitHidden !== "undefined") {
            hidden = "webkitHidden";
            visibilityChange = "webkitvisibilitychange";
          }

          // If the page is hidden, stop the timer and push total time in db
          // if the page is shown, start the timer (i.e. get the current time)
          
          var freePlayPageViewTimer = Date.now();
          
          function handleVisibilityChange() {
            if (document[hidden]) {
              var currentTime = Date.now();
              var totalViewTime = currentTime - freePlayPageViewTimer;
              //post to db 
              $.post("/habitsTimer", { habitsTimer: totalViewTime, _csrf : $('meta[name="csrf-token"]').attr('content') } );
            } else {
              //start the timer
              freePlayPageViewTimer = Date.now();
            }
          }
          
          //creating the activity page, requires timer
          $('#habitsActivityButton').on('click', function(){
            $('.habitsHomeDisplay').hide();
            $('.habitsNotificationsDisplay').hide();
            $('.habitsNotificationItem').hide();
            $('.habitsSettingsDisplay').hide();
            //get the current amount of time 
            $.get( "/habitsTimer", function( data ) {
              var activityDisplayTime = (data.totalTimeViewedHabits + (Date.now() - freePlayPageViewTimer))/60000;
              activityDisplayTime = Math.round( activityDisplayTime * 10 ) / 10; //round to 1 decimal place
              $('#habitsActivityTotalTime').html(activityDisplayTime);
              $('.habitsActivityDisplay').show();
            });
          });
          
          // Handle page visibility change   
          document.addEventListener(visibilityChange, handleVisibilityChange, false);
        }
        
      /**
       * End timer implementation and activity page for habits module
       */
         
       /*
       *code to make habits module UI work, swaps between various displays via hide/show of classes
       *could attempt to improve this with use of semantic ui tabs,
       *or could make 4 separate pages rather than keeping it all on one, did this to minimize amount of data needed to pass
       *but in hindsight it probably did not save much effort. 
       *Also determine here which notifications to show in notification page based on time elapsed
       */
         
         //show the settings page
         
         $('#habitsSettingsButton').on('click',function(){
           $('.habitsHomeDisplay').hide();
           $('.habitsNotificationsDisplay').hide();
           $('.habitsNotificationItem').hide();
           $('.habitsActivityDisplay').hide();
           $('.habitsSettingsDisplay').show();
         });
         
         //making the side menu work
         //this code in particular could be improved with the use of tabs or multiple pages
         
         $(".ui.vertical.menu a.item").on('click', function(){
           $('.ui.vertical.menu a.item').removeClass('active');
           $(this).addClass('active');
           if($(this).data().value === 'feed'){
             $(".habitsSettingsDisplay").hide();
             $(".habitsActivityDisplay").hide();
             if($("#notificationsteps").hasClass("active")){
               $(".ui.red.right.pointing.label").hide();
               //hide any old notification popups
               $('.notificationPopup').hide();
             }
             $('.habitsHomeDisplay').show();
             $('.habitsNotificationsDisplay').hide();
             $('.habitsNotificationItem').hide();
             $("#feedsteps").addClass("active");
             $("#notificationsteps").removeClass("active");

           } else if ($(this).data().value === 'notifications'){
             $(".habitsHomeDisplay").hide();
             $(".habitsSettingsDisplay").hide();
             $(".habitsActivityDisplay").hide();
             $(".habitsNotificationsDisplay").show();
             $("#feedsteps").removeClass("active");
             $("#notificationsteps").addClass("active");
             //hide any old notifications popups
             $('.notificationPopup').hide();
             $(".ui.red.right.pointing.label").hide();
             //get the start time, i.e. when the user first opened the free-play section
             $.get( "/habitsTimer", function( data ) {
               var timeNow = Date.now();
               var habitsStart = data.startTime;
               var timeElapsed = timeNow - habitsStart;
               //determine which notifications to show
               $('.habitsNotificationItem').each(function(index){ //for each notification, check if it is within the time elapsed
                 var notifTimestamp = parseInt($(this).find('.time.millisecondType').html(), 10);
                 if(notifTimestamp < timeElapsed){
                   $(this).find('.time.notificationTime').html(humanized_time_span(habitsStart + notifTimestamp));
                   $(this).show();
                 }
               });
             });
           }
         });
         
         //making the popup notifications work, have an interval set for every second to check if the popup should show.
         
         if(currentModule === "habits"){
           $.get( "/habitsTimer", function( data ) {
             var timeElapsed = Date.now() - data.startTime; 
             console.log("TIME ELAPSED: " + timeElapsed);
             $.get('/habitsNotificationTimes', function (data){
               //get the array of timestamps for the notifications from the script, will be sorted from least to greatest
               var notificationTimestamps = data.notificationTimestamps;
               var notificationIndexCount = 0;
               //get the correct index based on when you open the page vs. when you started
               for(var j = 0; j < notificationTimestamps.length; j++){
                 if(notificationTimestamps[j] > timeElapsed){
                   notificationIndexCount = j;
                   //got the right index, good to go. Start the interval now.
                   function intervalFunction(){
                     if(notificationTimestamps[notificationIndexCount] <= timeElapsed){
                       //code to actually show popup in frontend
                       //don't show popups in notifications window, only home
                       if($('.ui.vertical.menu a.item.active').data().value == "feed"){
                         //hide the mobile view popups if not in mobile view anymore
                         if($('.ui.top.fixed.vertical.menu').is(':hidden')){
                           $('#removeHiddenMobile').hide();
                         }else{
                           $('#removeHidden').hide();
                         }
                         var imageHref = "https://dhpd030vnpk29.cloudfront.net/profile_pictures/" + data.notificationPhoto[notificationIndexCount];
                         $('.popupNotificationImage').attr("src",imageHref);
                         $('.notificationPopup').attr("correspondingpost",data.notifCorrespondingPost[notificationIndexCount]);
                         $('.ui.fixed.bottom.sticky.notificationPopup .summary').text(data.notificationText[notificationIndexCount]);
                         $('.ui.fixed.bottom.sticky.notificationPopup .time').hide();
                         //only show the popup and animate the bell if they aren't disabled in the settings
                         if($("input[name='popupAlerts']").is(':checked')){
                           $('.ui.red.right.pointing.label').transition('pulse');
                           $('i.icon.bell').transition("tada");
                           //if in a mobile view, put popup in the middle
                           if($('.ui.top.fixed.vertical.menu').is(':visible')){
                             $('#removeHiddenMobile').removeClass('hidden').show();
                             $('#mobilePopup').transition('pulse');
                           }else {
                             //else put popup on the side
                             $('#removeHidden').removeClass('hidden').show();
                             $('#desktopPopup').transition('pulse');
                           }
                         }
                       }
                       notificationIndexCount++;
                       //stop the interval when we have gotten through all the notifications
                       if(notificationIndexCount >= notificationTimestamps.length){
                         clearInterval(setIntervalID);
                         console.log("CLEARED INTERVAL!");
                       }
                     }
                     timeElapsed = timeElapsed + 1000;
                   };
                   var setIntervalID = setInterval(intervalFunction,1000);
                   break;
                 }
                 //if we don't find a timestamp that's greater than the time elapsed, there will not be any popup notifications and we don't need the interval. 
               } //end for loop
             });
           });
         }
          
         //notifications popup on click, show the corresponding post
      
         $('.habitsNotificationItem, .notificationPopup').on('click', function(event){
           if ($(event.target).hasClass('close')){
             return false;
           }
           console.log("clicked item!");
           var relevantPostNumber = $(this).attr('correspondingPost');
           //show the relevant post in a popup modal
           console.log("execute on post " + relevantPostNumber);
           var relevantPost = $('.ui.fluid.card.habitsHomeDisplay[postnumber="'+relevantPostNumber+'"]').clone().show();
           $('.ui.viewPolicyPopup.modal .ui.fluid.card').html(relevantPost);
           $('.ui.viewPolicyPopup.modal .ui.fluid.card').removeAttr('postnumber').show();
           $('.viewPolicyPopup').modal('show');
           //lazy load the images 
           $(".ui.viewPolicyPopup.modal .ui.fluid.card img")
           .visibility({
             type: 'image',
             offset: 0,
             onLoad: function (calculations) {
               $('.ui.viewPolicyPopup.modal .ui.fluid.card img').visibility('refresh');
             }
           })
           ;

         });
  
         /*
         *end code for habits UI functionality
         */
       //end the long block of code dedicated to only the habits module
       //##########################
